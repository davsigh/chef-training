Step1
# Go to that directory where you copy Vagrantfile

Step2
Download vagrant "https://www.vagrantup.com/downloads"

Step3
Install VirtualBox "https://www.virtualbox.org/wiki/Downloads"

Step 4
vagrant up  --> Vagrant file should be available in this directory 

Expected output will be as mentioned below

davindersingh@davinders-mbp chef-training % vagrant up
Bringing machine 'web1' up with 'virtualbox' provider...
Bringing machine 'web2' up with 'virtualbox' provider...
Bringing machine 'load-balancer' up with 'virtualbox' provider...
==> web1: Checking if box 'bento/centos-7.2' version '2.3.1' is up to date...
==> web1: Clearing any previously set forwarded ports...
==> web1: Clearing any previously set network interfaces...
==> web1: Preparing network interfaces based on configuration...
    web1: Adapter 1: nat
    web1: Adapter 2: hostonly
==> web1: Forwarding ports...
    web1: 22 (guest) => 2222 (host) (adapter 1)
==> web1: Booting VM...
==> web1: Waiting for machine to boot. This may take a few minutes...
    web1: SSH address: 127.0.0.1:2222
    web1: SSH username: vagrant
    web1: SSH auth method: private key
==> web1: Machine booted and ready!
==> web1: Checking for guest additions in VM...
    web1: The guest additions on this VM do not match the installed version of
    web1: VirtualBox! In most cases this is fine, but in rare cases it can
    web1: prevent things such as shared folders from working properly. If you see
    web1: shared folder errors, please make sure the guest additions within the
    web1: virtual machine match the version of VirtualBox you have installed on
    web1: your host and reload your VM.
    web1:
    web1: Guest Additions Version: 5.1.10
    web1: VirtualBox Version: 6.1
==> web1: Setting hostname...
==> web1: Configuring and enabling network interfaces...
==> web1: Mounting shared folders...
    web1: /vagrant => /Users/davindersingh/Documents/VSCODE/Chef/chef-training
==> web1: Installing Ohai plugin
==> web1: Machine already provisioned. Run `vagrant provision` or use the `--provision`
==> web1: flag to force provisioning. Provisioners marked to run always will still run.
==> web2: Checking if box 'bento/centos-7.2' version '2.3.1' is up to date...
==> web2: Clearing any previously set forwarded ports...
==> web2: Fixed port collision for 22 => 2222. Now on port 2200.
==> web2: Clearing any previously set network interfaces...
==> web2: Preparing network interfaces based on configuration...
    web2: Adapter 1: nat
    web2: Adapter 2: hostonly
==> web2: Forwarding ports...
    web2: 22 (guest) => 2200 (host) (adapter 1)
==> web2: Booting VM...
==> web2: Waiting for machine to boot. This may take a few minutes...
    web2: SSH address: 127.0.0.1:2200
    web2: SSH username: vagrant
    web2: SSH auth method: private key
    web2: Warning: Connection reset. Retrying...
==> web2: Machine booted and ready!
==> web2: Checking for guest additions in VM...
    web2: The guest additions on this VM do not match the installed version of
    web2: VirtualBox! In most cases this is fine, but in rare cases it can
    web2: prevent things such as shared folders from working properly. If you see
    web2: shared folder errors, please make sure the guest additions within the
    web2: virtual machine match the version of VirtualBox you have installed on
    web2: your host and reload your VM.
    web2:
    web2: Guest Additions Version: 5.1.10
    web2: VirtualBox Version: 6.1
==> web2: Setting hostname...
==> web2: Configuring and enabling network interfaces...
==> web2: Mounting shared folders...
    web2: /vagrant => /Users/davindersingh/Documents/VSCODE/Chef/chef-training
==> web2: Installing Ohai plugin
==> web2: Machine already provisioned. Run `vagrant provision` or use the `--provision`
==> web2: flag to force provisioning. Provisioners marked to run always will still run.
==> load-balancer: Checking if box 'bento/centos-7.2' version '2.3.1' is up to date...
==> load-balancer: Clearing any previously set forwarded ports...
^@==> load-balancer: Fixed port collision for 22 => 2222. Now on port 2201.
==> load-balancer: Clearing any previously set network interfaces...
==> load-balancer: Preparing network interfaces based on configuration...
    load-balancer: Adapter 1: nat
==> load-balancer: Forwarding ports...
    load-balancer: 80 (guest) => 9000 (host) (adapter 1)
    load-balancer: 22 (guest) => 2201 (host) (adapter 1)
==> load-balancer: Booting VM...
==> load-balancer: Waiting for machine to boot. This may take a few minutes...
    load-balancer: SSH address: 127.0.0.1:2201
    load-balancer: SSH username: vagrant
    load-balancer: SSH auth method: private key
    load-balancer: Warning: Remote connection disconnect. Retrying...
    load-balancer: Warning: Connection reset. Retrying...
==> load-balancer: Machine booted and ready!
==> load-balancer: Checking for guest additions in VM...
    load-balancer: The guest additions on this VM do not match the installed version of
    load-balancer: VirtualBox! In most cases this is fine, but in rare cases it can
    load-balancer: prevent things such as shared folders from working properly. If you see
    load-balancer: shared folder errors, please make sure the guest additions within the
    load-balancer: virtual machine match the version of VirtualBox you have installed on
    load-balancer: your host and reload your VM.
    load-balancer:
    load-balancer: Guest Additions Version: 5.1.10
    load-balancer: VirtualBox Version: 6.1
==> load-balancer: Setting hostname...
==> load-balancer: Mounting shared folders...
    load-balancer: /vagrant => /Users/davindersingh/Documents/VSCODE/Chef/chef-training
==> load-balancer: Installing Ohai plugin
==> load-balancer: Machine already provisioned. Run `vagrant provision` or use the `--provision`
==> load-balancer: flag to force provisioning. Provisioners marked to run always will still run.


#virtualBOX 
2021-05-16-11-08-49.png